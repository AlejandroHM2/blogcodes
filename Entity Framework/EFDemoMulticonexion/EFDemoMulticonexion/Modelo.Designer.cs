//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EFDemoModel", "FK_Ciudad_Pais", "Pais", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EFDemoMulticonexion.Pais), "Ciudad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EFDemoMulticonexion.Ciudad), true)]

#endregion

namespace EFDemoMulticonexion
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EFDemoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EFDemoEntities object using the connection string found in the 'EFDemoEntities' section of the application configuration file.
        /// </summary>
        public EFDemoEntities() : base("name=EFDemoEntities", "EFDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFDemoEntities object.
        /// </summary>
        public EFDemoEntities(string connectionString) : base(connectionString, "EFDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EFDemoEntities object.
        /// </summary>
        public EFDemoEntities(EntityConnection connection) : base(connection, "EFDemoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ciudad> Ciudad
        {
            get
            {
                if ((_Ciudad == null))
                {
                    _Ciudad = base.CreateObjectSet<Ciudad>("Ciudad");
                }
                return _Ciudad;
            }
        }
        private ObjectSet<Ciudad> _Ciudad;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pais> Pais
        {
            get
            {
                if ((_Pais == null))
                {
                    _Pais = base.CreateObjectSet<Pais>("Pais");
                }
                return _Pais;
            }
        }
        private ObjectSet<Pais> _Pais;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ciudad EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCiudad(Ciudad ciudad)
        {
            base.AddObject("Ciudad", ciudad);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pais EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPais(Pais pais)
        {
            base.AddObject("Pais", pais);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFDemoModel", Name="Ciudad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ciudad : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ciudad object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="paisId">Initial value of the PaisId property.</param>
        /// <param name="nombre">Initial value of the Nombre property.</param>
        public static Ciudad CreateCiudad(global::System.Int32 id, global::System.Int32 paisId, global::System.String nombre)
        {
            Ciudad ciudad = new Ciudad();
            ciudad.Id = id;
            ciudad.PaisId = paisId;
            ciudad.Nombre = nombre;
            return ciudad;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaisId
        {
            get
            {
                return _PaisId;
            }
            set
            {
                OnPaisIdChanging(value);
                ReportPropertyChanging("PaisId");
                _PaisId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaisId");
                OnPaisIdChanged();
            }
        }
        private global::System.Int32 _PaisId;
        partial void OnPaisIdChanging(global::System.Int32 value);
        partial void OnPaisIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFDemoModel", "FK_Ciudad_Pais", "Pais")]
        public Pais Pais
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pais>("EFDemoModel.FK_Ciudad_Pais", "Pais").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pais>("EFDemoModel.FK_Ciudad_Pais", "Pais").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pais> PaisReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pais>("EFDemoModel.FK_Ciudad_Pais", "Pais");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pais>("EFDemoModel.FK_Ciudad_Pais", "Pais", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EFDemoModel", Name="Pais")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pais : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pais object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nombre">Initial value of the Nombre property.</param>
        public static Pais CreatePais(global::System.Int32 id, global::System.String nombre)
        {
            Pais pais = new Pais();
            pais.Id = id;
            pais.Nombre = nombre;
            return pais;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EFDemoModel", "FK_Ciudad_Pais", "Ciudad")]
        public EntityCollection<Ciudad> Ciudad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ciudad>("EFDemoModel.FK_Ciudad_Pais", "Ciudad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ciudad>("EFDemoModel.FK_Ciudad_Pais", "Ciudad", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
